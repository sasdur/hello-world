pipeline {

    agent {label "MasterNode" }



    stages {

        stage ('Compile Stage') {



            steps {

                withMaven(maven : 'Maven-Master-3.0.5') {

                    sh 'mvn clean compile'

                }

            }

        }



        stage ('Testing Stage') {



            steps {

                withMaven(maven : 'Maven-Master-3.0.5') {

                    sh 'mvn install'

                }

            }

        }





        stage ('Deployment Stage') {

            steps {

                withMaven(maven : 'Maven-Master-3.0.5') {

                    sh 'mvn package'

                }

            }

        }
		
		stage ('SSH WAR and DockerFile to TomcatServer' ){
		
			steps {
					sshPublisher(publishers: [sshPublisherDesc(configName: 'docker-server-tomcat-tg', 
					transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000,
					flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', 
					remoteDirectory: '//opt//docker', remoteDirectorySDF: false, removePrefix: 'webapp/target', 
					sourceFiles: 'webapp/target/*.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])cd /opt/docker


				sh """
				    cd /opt/docker
					docker build -t $JOB_NAME:v1.$BUILD_ID .
					docker tag $JOB_NAME:v1.$BUILD_ID sasdevops/$JOB_NAME:v1.$BUILD_ID
					docker tag $JOB_NAME:v1.$BUILD_ID sasdevops/$JOB_NAME:latest
					docker push sasdevops/$JOB_NAME:v1.$BUILD_ID
					docker push sasdevops/$JOB_NAME:latest
					docker rmi $JOB_NAME:v1.$BUILD_ID sasdevops/$JOB_NAME:v1.$BUILD_ID sasdevops/$JOB_NAME:latest
				"""
					
			}
		}
		
		stage ('Create the container with expose port 8081 .' ) {
			steps {
				
				sshPublisher(publishers: [sshPublisherDesc(configName: 'docker-server-tomcat-tg', 
				transfers: [sshTransfer(execCommand: 'docker run -d -p 8081:8080 sasdevops/$JOB_NAME:v1.$BUILD_ID')])])
			}
		
		}
    }

}